apply plugin: 'com.android.library'

import java.util.regex.Matcher
import java.util.regex.Pattern
import org.apache.tools.ant.taskdefs.condition.Os

android {
    sourceSets {
        main {
            manifest.srcFile "AndroidManifest.xml"
            java.srcDirs = []
            jniLibs.srcDirs = ["./jniLibs/OsmAnd"]
            jni.srcDirs = []
            assets.srcDirs = []
        }
    }

    namespace "net.osmand.core.nativeLibs.debug"
    compileSdk 35
    buildToolsVersion = "35.0.0"

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 34
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    lintOptions {
        abortOnError false
    }

	aaptOptions {
		// Don't compress any resources
		noCompress "qz", "png"
	}
}

// OsmAnd libraries tasks
task cleanupOsmAndSharedLibs(type: Delete) {
    description "Clean-up OsmAnd shared libraries"

    delete "./jniLibs/OsmAnd"
}

task copyOsmAndSharedLibs(type: Copy) {
    description "Copy OsmAnd shared libraries"

    dependsOn cleanupOsmAndSharedLibs

    from("../../../../binaries/android") {
        include "clang-*/Debug/libOsmAndCoreWithJNI.so"
        eachFile { fileCopyDetails ->
            fileCopyDetails.path = fileCopyDetails.path.replaceAll(/.*clang-(.*)\/Debug\/(.*)/, '$1/$2')
        }
    }

    into "./jniLibs/OsmAnd"
    includeEmptyDirs = false
}

android.libraryVariants.all { variant ->
    def mergeJniLibsTask = tasks.findByName("merge${variant.name.capitalize()}JniLibFolders")
    if (mergeJniLibsTask != null) {
        mergeJniLibsTask.dependsOn copyOsmAndSharedLibs
    }
}

configurations {
    OsmAndCore_androidNativeDebug
}
def aarDebFile = layout.buildDirectory.file('outputs/aar/OsmAndCore_androidNativeDebug-debug.aar')
def aarDebArtifact = artifacts.add('OsmAndCore_androidNativeDebug', aarDebFile.get().asFile) {
    name "OsmAndCore_androidNativeDebug"
	type "aar"
}

// // Uploading artifacts to local path
// group = "net.osmand"
// //archivesBaseName = "OsmAndCore_androidNativeDebug"
// version = System.getenv("OSMAND_BINARIES_IVY_REVISION") ?: "master-snapshot"
// project.afterEvaluate {
//     publishing {
//         repositories {
//             ivy {   
//         //    credentials {
//         //        username "" 
//         //       password ""
//         //   }
//             url = System.getenv("OSMAND_BINARIES_IVY_ROOT") ?: "./"
//             patternLayout {
//                 artifact "[organisation]/[module]/[revision]/[artifact]-[revision].[ext]"
//             }
//             }
//             publications {
//                 debugAar(IvyPublication) {
//                     artifact(bundleDebugAar) {
//                         name "OsmAndCore_androidNativeDebug"
//                         module "OsmAndCore_androidNativeDebug"
//                     }
//                 }
// 		    }
//         }
//     }
// }

dependencies {
    implementation project(":OsmAndCore_androidNative")
}
