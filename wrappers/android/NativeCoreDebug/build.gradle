apply plugin: 'com.android.library'

import java.util.regex.Matcher
import java.util.regex.Pattern
import org.apache.tools.ant.taskdefs.condition.Os

android {
    sourceSets {
        main {
            manifest.srcFile "AndroidManifest.xml"
            java.srcDirs = []
            jniLibs.srcDirs = ["./jniLibs/OsmAnd"]
            jni.srcDirs = []
            assets.srcDirs = []
        }
    }

    compileSdkVersion 21
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 21
    }

    lintOptions {
        abortOnError false
    }

	aaptOptions {
		// Don't compress any resources
		noCompress "qz", "png"
	}
}

// OsmAnd libraries tasks
task cleanupOsmAndSharedLibs(type: Delete) {
    description "Clean-up OsmAnd shared libraries"

    delete "./jniLibs/OsmAnd"
}

task copyOsmAndSharedLibs(type: Copy) {
    description "Copy OsmAnd shared libraries"

    dependsOn cleanupOsmAndSharedLibs

    from("../../../../binaries/android") {
        include "clang-*/Debug/libOsmAndCoreWithJNI.so"
        eachFile { fileCopyDetails ->
            fileCopyDetails.path = fileCopyDetails.path.replaceAll(/.*clang-(.*)\/Debug\/(.*)/, '$1/$2')
        }
    }

    into "./jniLibs/OsmAnd"
    includeEmptyDirs = false
}
tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn << copyOsmAndSharedLibs
}

configurations {
    OsmAndCore_androidNativeDebug
}
def aarDebFile = layout.buildDirectory.file('outputs/aar/OsmAndCore_androidNativeDebug-debug.aar')
def aarDebArtifact = artifacts.add('OsmAndCore_androidNativeDebug', aarDebFile.get().asFile) {
    name "OsmAndCore_androidNativeDebug"
	type "aar"
}

// Uploading artifacts to local path
group = "net.osmand"
//archivesBaseName = "OsmAndCore_androidNativeDebug"
version = System.getenv("OSMAND_BINARIES_IVY_REVISION") ?: "4.7"
project.afterEvaluate {
publishing {
    repositories {
        ivy {   
    //    credentials {
    //        username "" 
     //       password ""
     //   }
          url = System.getenv("OSMAND_BINARIES_IVY_ROOT") ?: "./"
          patternLayout {
            artifact "[organisation]/[module]/[revision]/[artifact]-[revision].[ext]"
          }
        }
        publications {
            debugAar(IvyPublication) {
                artifact(bundleDebugAar) {
                    name "OsmAndCore_androidNativeDebug"
                    module "OsmAndCore_androidNativeDebug"
                }
            }
		}
    }
}
}

dependencies {
    compile project(":OsmAndCore_androidNative")
}
